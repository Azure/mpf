# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
---
# Terraform Provider testing workflow.
name: 🧪 mpf-ci

# This GitHub action runs your tests for each pull request.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
  # schedule:
  #   - cron: "0 2 * * *"
  workflow_dispatch:

# concurrency:
#   group: ${{ format('{0}-{1}-{2}-{3}-{4}', github.workflow, github.event_name, github.ref, github.base_ref || null, github.head_ref || null) }}
#   cancel-in-progress: true

# env:

permissions:
  id-token: write
  contents: read
  pull-requests: read

jobs:
  lintGo:
    name: Go lint
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: ⤵️ Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: 🚧 Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
          cache: true

      - name: 🚧 Setup Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          repo-token: ${{ github.token }}

      - name: 🔀 Get dependencies
        run: task deps

      - name: ✔️ Run GoVulnCheck
        run: |
          task install:govulncheck
          task govulncheck || (echo "::warning::govulncheck found issues" && exit 0)

      - name: ✔️ Run Go linters
        uses: golangci/golangci-lint-action@55c2c1448f86e01eaae002a5a3a9624417608d84 # v6.5.2
        with:
          version: latest
          only-new-issues: true
          skip-cache: true
          skip-save-cache: true
          args: --out-format=github-actions
      
  linkMarkdowns:
    name: 📃 Lint Markdown
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: ⤵️ Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: 🚧 Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
          cache: true

      - name: 🚧 Setup Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          repo-token: ${{ github.token }}

      - name: 🔨 Setup tools
        run: |
          task install:markdownlint

      - name: ✔️ Run Files linters
        run: task lint:md

  build:
    name: 🏗️ Build
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: ⤵️ Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: 🚧 Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
          cache: true

      - name: 🚧 Setup Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          repo-token: ${{ github.token }}

      - name: 🔀 Get dependencies
        run: task deps:download

      - name: 🔨 Setup Build tools
        run: task build:mpf

      # - name: 🏗️ Build
      #   run: task build

  test:
    name: 🧪 Run Unit Tests (${{ matrix.cli }} ${{ matrix.version }})
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      pull-requests: write
      checks: write
    steps:
      - name: ⤵️ Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: 🚧 Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
          cache: true

      - name: 🚧 Setup Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          repo-token: ${{ github.token }}

      - name: 🔀 Download Go dependencies
        run: task deps:download

      - name: 🔨 Setup Test tools
        run: task test:tools

      - name: 🧪 Run Tests
        run: task testunit



      - name: 📤 Upload unit test results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ format('{0}-{1}-test-results', matrix.cli, env.CLI_VERSION) }}
          path: testresults.xml
          if-no-files-found: warn
          overwrite: true

      - name: 📤 Upload unit test coverage results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ format('{0}-{1}-test-coverage-results', matrix.cli, env.CLI_VERSION) }}
          path: |
            coverage.html
            coverage.json
            coverage.out
            coverage.txt
            coverage.xml
          if-no-files-found: warn
          overwrite: true

      - name: 📢 Publish unit test results
        if: github.ref == 'refs/heads/main' || github.event.pull_request.head.repo.full_name == github.repository
        uses: dorny/test-reporter@dc3a92680fcc15842eef52e8c4606ea7ce6bd3f3 # v2.1.1
        with:
          name: 📜 Test results (${{ matrix.cli }} ${{ matrix.version }})
          reporter: jest-junit
          path: testresults.xml
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: ⚙️ Get unit Coverage summary
        if: always()
        uses: irongut/CodeCoverageSummary@51cc3a756ddcd398d447c044c02cb6aa83fdae95 # v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: "30 60"

      - name: 📤 Upload unit Coverage summary
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ format('{0}-{1}-test-coverage-summary', matrix.cli, env.CLI_VERSION) }}
          path: |
            code-coverage-results.md
          if-no-files-found: warn
          overwrite: true
  
  check-test-matrix:
    if: always()
    name: 🧪 Check Unit Tests
    needs: test
    runs-on: ubuntu-24.04
    steps:
      - name: ✅ OK
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: 🛑 Failure
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
