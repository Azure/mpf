#     MIT License
# 
#     Copyright (c) Microsoft Corporation.
# 
#     Permission is hereby granted, free of charge, to any person obtaining a copy
#     of this software and associated documentation files (the "Software"), to deal
#     in the Software without restriction, including without limitation the rights
#     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#     copies of the Software, and to permit persons to whom the Software is
#     furnished to do so, subject to the following conditions:
# 
#     The above copyright notice and this permission notice shall be included in all
#     copies or substantial portions of the Software.
# 
#     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#     SOFTWARE

name: Terraform e2e tests

on:
  workflow_dispatch:

  schedule:
    - cron: '0 2 * * *'


permissions:
  id-token: write
  contents: read

jobs:
  e2e-terraform:
    runs-on: ubuntu-latest
    env:
      MPF_SUBSCRIPTIONID: ${{ secrets.MPF_SUBSCRIPTIONID }}
      MPF_TENANTID: ${{ secrets.MPF_TENANTID }}
      MPF_SPCLIENTID: ${{ secrets.MPF_SPCLIENTID }}
      MPF_SPCLIENTSECRET: ${{ secrets.MPF_SPCLIENTSECRET }}
      MPF_SPOBJECTID: ${{ secrets.MPF_SPOBJECTID }}
    strategy:
      matrix:
        go-version: [ '1.23.6' ]

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v3
      #   with:
      #     terraform_version: 1.5.7
      - name: Install Terraform
        run: |
          curl -Lo terraform.zip https://releases.hashicorp.com/terraform/1.10.4/terraform_1.10.4_linux_amd64.zip
          unzip terraform.zip
          # move to working directory
          sudo mv terraform /usr/local/bin/terraform
          
          terraform --version

      - name: Install dependencies
        run: go get ./...

      - name: Build
        run: go build -v ./...

      - name: 'Az CLI login - federated'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_OID_CLIENT_ID }}
          tenant-id: ${{ secrets.MPF_TENANTID }}
          subscription-id: ${{ secrets.MPF_SUBSCRIPTIONID }}

      - name: Test with Go
        run: |
          which terraform
          export MPF_TFPATH="/usr/local/bin/terraform"
          $MPF_TFPATH --version
          pushd .
          cd ./samples/terraform/aci/
          $MPF_TFPATH init
          popd

          go install github.com/jstemmer/go-junit-report@latest
          go test ./e2eTests -v -timeout 30m -run TestTerraform | tee TestResults-${{ matrix.go-version }}.txt
          cat TestResults-${{ matrix.go-version }}.txt | go-junit-report -set-exit-code > TestResults-${{ matrix.go-version }}.xml
          
      - name: Upload Go test results
        uses: actions/upload-artifact@v4
        with:
          name: Go-results-${{ matrix.go-version }}
          path: TestResults-${{ matrix.go-version }}.xml
      
      - name: Test Summary
        uses: test-summary/action@v1
        with:
          paths: |
            TestResults-${{ matrix.go-version }}.xml  
        if: always()
