# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
---
# Terraform Provider testing workflow.
name: 🧪 Test

# This GitHub action runs your tests for each pull request.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
  # schedule:
  #   - cron: "0 2 * * *"
  workflow_dispatch:

# concurrency:
#   group: ${{ format('{0}-{1}-{2}-{3}-{4}', github.workflow, github.event_name, github.ref, github.base_ref || null, github.head_ref || null) }}
#   cancel-in-progress: true

# env:

permissions:
  id-token: write
  contents: read
  pull-requests: read

jobs:
  lintGo:
    name: lint, build, unit test
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: ⤵️ Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: 🚧 Setup Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: go.mod
          cache: true

      - name: 🚧 Setup Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          repo-token: ${{ github.token }}

      - name: 🔀 Get dependencies
        run: task deps

      - name: ✔️ Run GoVulnCheck
        run: |
          task install:govulncheck
          task govulncheck || (echo "::warning::govulncheck found issues" && exit 0)

      - name: ✔️ Run Go linters
        uses: golangci/golangci-lint-action@2226d7cb06a077cd73e56eedd38eecad18e5d837 # v6.5.0
        with:
          version: latest
          only-new-issues: true
          skip-cache: true
          skip-save-cache: true
          args: --out-format=github-actions
      
  linkMarkdowns:
    name: 📃 Check Docs
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: ⤵️ Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: 🚧 Setup Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: go.mod
          cache: true

      - name: 🚧 Setup Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          repo-token: ${{ github.token }}

      - name: 🔨 Setup tools
        run: |
          task install:markdownlint

      - name: ✔️ Run Files linters
        run: task lint:md

  build:
    name: 🏗️ Build
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: ⤵️ Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: 🚧 Setup Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: go.mod
          cache: true

      - name: 🚧 Setup Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          repo-token: ${{ github.token }}

      - name: 🔀 Get dependencies
        run: task deps:download

      - name: 🔨 Setup Build tools
        run: task build:mpf

      - name: 🏗️ Build
        run: task build

  test:
    name: 🧪 Run Tests (${{ matrix.cli }} ${{ matrix.version }})
    steps:
      - name: ⤵️ Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: 🚧 Setup Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: go.mod
          cache: true

      - name: 🚧 Setup Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          repo-token: ${{ github.token }}

      - name: 🔀 Download Go dependencies
        run: task deps:download

      - name: 🔨 Setup Test tools
        run: task test:tools

      - name: 🧪 Run Tests
        run: task testunit



      - name: 📤 Upload test results
        if: always()
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: ${{ format('{0}-{1}-test-results', matrix.cli, env.CLI_VERSION) }}
          path: testresults.xml
          if-no-files-found: warn
          overwrite: true

      - name: 📤 Upload coverage results
        if: always()
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: ${{ format('{0}-{1}-test-coverage-results', matrix.cli, env.CLI_VERSION) }}
          path: |
            coverage.html
            coverage.json
            coverage.out
            coverage.txt
            coverage.xml
          if-no-files-found: warn
          overwrite: true

      - name: 📢 Publish test results
        if: always()
        uses: dorny/test-reporter@31a54ee7ebcacc03a09ea97a7e5465a47b84aea5 # v1.9.1
        with:
          name: 📜 Test results (${{ matrix.cli }} ${{ matrix.version }})
          reporter: jest-junit
          path: testresults.xml

      - name: ⚙️ Get Coverage summary
        if: always()
        uses: irongut/CodeCoverageSummary@51cc3a756ddcd398d447c044c02cb6aa83fdae95 # v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: "40 60"

      - name: 📤 Upload Coverage summary
        if: always()
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: ${{ format('{0}-{1}-test-coverage-summary', matrix.cli, env.CLI_VERSION) }}
          path: |
            code-coverage-results.md
          if-no-files-found: warn
          overwrite: true

  coverage-summary:
    name: 📔 Coverage Summary
    needs:
      - test
      - changes
    if: always() && needs.changes.outputs.src == 'true'
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: 📥 Download
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          pattern: terraform-1_10-test-coverage*
          merge-multiple: true

      - name: 📝 Publish
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

      - name: 📤 Upload results to Codecov
        uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3 # v5.3.1
        with:
          use_oidc: true
          files: ./coverage.out

      - name: 🔎 Find comment
        if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
        uses: peter-evans/find-comment@3eae4d37986fb5a8592848f6a574fdf654e61f9e # v3.1.0
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: github-actions[bot]
          body-includes: Minimum allowed line rate is

      - name: 📝 Create comment
        if: steps.fc.outputs.comment-id == '' && (github.event_name == 'pull_request' || github.event_name == 'pull_request_target')
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-path: code-coverage-results.md

      - name: 📝 Update comment
        if: steps.fc.outputs.comment-id != '' && (github.event_name == 'pull_request' || github.event_name == 'pull_request_target')
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body-path: code-coverage-results.md
          edit-mode: replace

  # Returns success if all matrix jobs in test are successful - otherwise, it returns a failure.
  # Use this as a PR status check for GitHub Policy Service instead of individual matrix entry checks.
  check-test-matrix:
    if: always()
    name: 🧪 Check Tests
    needs: test
    runs-on: ubuntu-24.04
    steps:
      - name: ✅ OK
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: 🛑 Failure
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
